# ===========================================
# ✅ PROPRIEDADES GERAIS DO SPRING BOOT
# ===========================================

# Força a saída de logs com cores ANSI no console (melhora a leitura visual)
spring.output.ansi.enabled=ALWAYS

# Desativa a funcionalidade "Open EntityManager in View", que pode causar problemas de performance/leaks
spring.jpa.open-in-view=false

# Define nível de log DEBUG para a camada web do Spring (útil para depuração de controllers, filtros, etc)
logging.level.org.springframework.web=DEBUG

# Define nível de log DEBUG para a biblioteca springfox (Swagger)
logging.level.springfox=DEBUG

# Define nível de log DEBUG para as classes da aplicação (seu pacote base)
logging.level.com.example.employeemanagement=DEBUG


# ===========================================
# ✅ CONFIGURAÇÃO DO BANCO DE DADOS H2 (EM MEMÓRIA)
# ===========================================

# URL de conexão com o banco H2 em memória.
# - "gestao" é o nome da base.
# - "DB_CLOSE_DELAY=-1": mantém o banco vivo enquanto a JVM estiver ativa.
# - "DB_CLOSE_ON_EXIT=FALSE": impede o fechamento automático ao encerrar o app.
spring.datasource.url=jdbc:h2:mem:gestao;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE

# Driver JDBC usado para o H2
spring.datasource.driverClassName=org.h2.Driver

# Usuário padrão do H2
spring.datasource.username=sa

# Senha (em branco por padrão no H2 em memória)
spring.datasource.password=

# Dialeto Hibernate correspondente ao banco H2 (traduz SQL genérico para SQL específico do H2)
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# ===========================================
# ✅ CONSOLE WEB DO H2
# ===========================================

# Habilita o console web do H2 (interface web para executar SQL e visualizar dados)
spring.h2.console.enabled=true

# Caminho para acessar o console no navegador (http://localhost:8080/h2-console)
spring.h2.console.path=/h2-console

# ===========================================
# ✅ HIBERNATE / JPA
# ===========================================

# Atualiza automaticamente o schema do banco com base nas entidades JPA
# - update: mantém dados existentes e ajusta a estrutura
# - opções alternativas: create, create-drop, validate, none
spring.jpa.hibernate.ddl-auto=update



springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs